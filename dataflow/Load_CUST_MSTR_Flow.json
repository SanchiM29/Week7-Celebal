{
	"name": "Load_CUST_MSTR_Flow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "custMstrInput",
						"type": "DatasetReference"
					},
					"name": "customersource"
				},
				{
					"dataset": {
						"referenceName": "masterChildInput",
						"type": "DatasetReference"
					},
					"name": "masterChildsource"
				},
				{
					"dataset": {
						"referenceName": "hEcomOrderInput",
						"type": "DatasetReference"
					},
					"name": "ecomSource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "CUST_MSTR",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "master_child",
						"type": "DatasetReference"
					},
					"name": "sink2"
				},
				{
					"dataset": {
						"referenceName": "H_ECOM_Orders",
						"type": "DatasetReference"
					},
					"name": "sink3"
				}
			],
			"transformations": [
				{
					"name": "AddFilenameDate"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CustomerID as string,",
				"          Name as string,",
				"          City as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> customersource",
				"source(output(",
				"          ChildID as string,",
				"          ParentID as string,",
				"          Status as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> masterChildsource",
				"source(output(",
				"          OrderID as string,",
				"          CustomerID as string,",
				"          Amount as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> ecomSource",
				"customersource derive(load_date = substring(byName('sourceFileName'), 10, 8)) ~> AddFilenameDate",
				"masterChildsource derive(date = toDate(substring(byName('sourceFileName'), 20, 8), 'yyyyMMdd'),",
				"          dateKey = substring(byName('sourceFileName'), 20, 8)) ~> derivedColumn1",
				"AddFilenameDate sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CustomerID as integer,",
				"          Name as string,",
				"          City as string,",
				"          load_date as date",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          CustomerID,",
				"          Name,",
				"          City,",
				"          load_date",
				"     )) ~> sink1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          ChildID,",
				"          ParentID,",
				"          Status,",
				"          date,",
				"          dateKey",
				"     )) ~> sink2",
				"ecomSource sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink3"
			]
		}
	}
}